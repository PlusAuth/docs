---
title: Authorization
layout:
  title: false
  toc: false
---

<article class="grid lg:grid-cols-2 gap-12">
<section class="">
    <h1>Authorization</h1>

Being as identity and access management solution PlusAuth also uses itself for authentication. For using the Api you must have an access token retrieved from PlusAuth. Be aware that access tokens hold your privileges so make sure to keep them safe.

PlusAuth Rest API protected by <GK entry="oauth-2">OAuth 2.0</GK>  and you can access it with [Bearer](https://tools.ietf.org/html/rfc6750) tokens.

API requests that made over HTTP will be redirected to corresponding HTTPS endpoint. Depending on your http client those redirects may fail, so make sure you use HTTPS instead of HTTP.

After configuring your client, you can retrieve tokens by using [OAuth 2.0 flows](https://tools.ietf.org/html/rfc6749#section-4).

## Client Configuration
In order to retrieve tokens, firstly, you must create a Client in your tenant's dashboard.

Go to [ Dashboard > Clients ](https://dashboard.plusauth.com/~clients) and click to create button.
![img_1.png](./img/create-client.png)

After creating the client, you must authorize PlusAuth permissions to the client. To do so,
go to [Dashboard > Resources](https://dashboard.plusauth.com/~resources) and go to `Clients` section from details of `Management Api`.
Type in your client's name and click to `Authorize`.

In the below, you will see a kendo list box. Assign the permissions you need from left to right and click to `Save`

![img_2.png](./img/authorize-client.png)

</section>
<section class="sticky top-24 self-start">

{% request-snippet
  title="Retrieve Token with OAuth2 Client Credentials Grant"
%}
curl --request POST \
    --url https://{{TENANT_ID}}.plusauth.com/oauth2/token \
    --header 'Content-Type: application/x-www-form-urlencoded' \
    --data-urlencode 'client_id={{CLIENT_ID}}' \
    --data-urlencode 'client_secret={{CLIENT_SECRET}}' \
    --data-urlencode 'grant_type=client_credentials' \
    --data-urlencode 'audience=https://{{TENANT_ID}}.{{DOMAIN}}/api/' \
    --data-urlencode 'scope={{SPACE_SEPARATED_SCOPES}}'

{% /request-snippet %}

</section>
</article>
