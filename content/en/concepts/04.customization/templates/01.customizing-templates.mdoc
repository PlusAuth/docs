---
title: "Customizing Templates"
meta_title: "Customizing  Templates"
meta_description: "Learn how to configure and customize templates in PlusAuth — a secure authentication and authorization platform."
keywords:
  - concepts
  - plusauth
  - template
  - customize template
---

PlusAuth uses [Twig](https://twig.symfony.com/doc/3.x/templates.html) as its templating engine.
We've prepared an [**Introductory Guide to Twig**](/concepts/customization/templates/introduction-to-twig) to help you get started.

## Preview and Variables

When editing a template:

- Switch to the **Preview** tab to see how your template will look.
- Use the **Edit preview variables** button above the editor to adjust test data.

{% alert type="warn" %}
Preview variables are only for testing purposes. Changes made to the preview JSON do not affect real usage.
{% /alert %}



## Available Variables
Each template may have a different set of variables.
You can find the list of variables for each template in their preview variables from the dashboard.
The following variables are available for every template:

{% data-table
columns=["Key", "Description"]
data=[
{ key: "request.language"      , description: "Language parameter of request. See [Localization](#localizing-templates)"},
{ key: "application.name"      , description: "Initiating Client's name"},
{ key: "application.id"        , description: "Initiating Client's id"},
{ key: "application.metadata"  , description: "Initiating Client's metadata"},
{ key: "tenant.id"             , description: "Your tenant's id"},
{ key: "tenant.display_name"   , description: "Your tenant's display name"},
{ key: "user"                  , description: "Target user object. See [Reference](/api/core/-/users/get-user#response-body-schema) "}
]
/%}



## Localizing Templates
The most straightforward way to localize your templates is to use the `user.profile.locale` variable.

You can use the `request.language` variable to localize your templates.
This variable contains the language code that represents the user's preferred language.

The value of `request.language` is determined from:

- **`X-Request-Language` header** – You can explicitly set this header to send a custom locale value.
- **[`Accept-Language`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language) header** – This header is sent automatically by browsers to indicate the user's preferred languages.

If both headers are present, `X-Request-Language` takes priority.
This allows you to override the browser's default language when needed.

The following template snippet checks the user's locale,
falling back to first locale defined at `request.language` if not set:

```twig {% process=false %}
{# Use the user's profile locale if available, otherwise take the first language from request.language #}
{% set locale = user.profile.locale ? user.profile.locale : (request.language | split(";") | at(0)) %}

{% if 'de' in locale %}
   Verfügbar
{% elseif 'tr' in locale %}
   Mevcut
{% else %}
   Available
{% endif %}
```
